trigger:
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: '1c9b1cea-b27a-4a48-80ed-545acc9d1ea5'
  webAppName: 'workon-backend'
  environmentName: 'production'

stages:
  - stage: Build
    displayName: 'Build stage'
    jobs:
      - job: Build
        displayName: 'Build'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build
            displayName: 'npm install and build'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'package.json'
              TargetFolder: '$(Build.SourcesDirectory)/dist'
            displayName: 'Copy package.json to dist folder'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: 'dist'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: 'dist.zip'
              replaceExistingArchive: true
            displayName: 'Archive files'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: dist.zip
              ArtifactName: WorkOn-backend Artifact
              publishLocation: 'Container'
  - stage: Deploy
    displayName: 'Deploy stage'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: 'Deploy'
        environment: $(environmentName)
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'WorkOn-backend Artifact'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - script: |
                    ls -l $(System.ArtifactsDirectory)
                  displayName: 'List downloaded artifacts'

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(webAppName)
                    runtimeStack: 'NODE|20-lts'
                    package: $(System.ArtifactsDirectory)/**/*.zip
                    startUpCommand: 'npm run start'
                  displayName: 'Azure Web App Deploy'
